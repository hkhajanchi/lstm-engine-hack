;buildInfoPackage: chisel3, version: 3.3.1, scalaVersion: 2.12.11, sbtVersion: 1.3.10
circuit MAC : 
  module MAC : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip west : {flip ready : UInt<1>, valid : UInt<1>, bits : SInt<16>}, flip north : {flip ready : UInt<1>, valid : UInt<1>, bits : SInt<16>}, south : {flip ready : UInt<1>, valid : UInt<1>, bits : SInt}, east : {flip ready : UInt<1>, valid : UInt<1>, bits : SInt}, flip weight_input : {flip ready : UInt<1>, valid : UInt<1>, bits : SInt<16>}}
    
    reg busy : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[MAC.scala 29:23]
    reg comp_done : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[MAC.scala 30:28]
    reg weight_loaded : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[MAC.scala 31:32]
    reg weight : SInt<16>, clock with : (reset => (reset, asSInt(UInt<16>("h00")))) @[MAC.scala 34:25]
    reg east_reg : SInt<16>, clock with : (reset => (reset, asSInt(UInt<16>("h00")))) @[MAC.scala 35:27]
    reg north_reg : SInt<16>, clock with : (reset => (reset, asSInt(UInt<16>("h00")))) @[MAC.scala 36:28]
    reg mac_buf : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[MAC.scala 37:26]
    node _T = eq(weight_loaded, UInt<1>("h00")) @[MAC.scala 40:30]
    io.weight_input.ready <= _T @[MAC.scala 40:27]
    node _T_1 = eq(busy, UInt<1>("h00")) @[MAC.scala 41:23]
    io.west.ready <= _T_1 @[MAC.scala 41:20]
    node _T_2 = eq(busy, UInt<1>("h00")) @[MAC.scala 42:23]
    io.north.ready <= _T_2 @[MAC.scala 42:20]
    io.east.valid <= UInt<1>("h00") @[MAC.scala 44:20]
    io.south.valid <= UInt<1>("h00") @[MAC.scala 45:20]
    io.east.bits <= asSInt(UInt<1>("h00")) @[MAC.scala 47:19]
    io.south.bits <= asSInt(UInt<1>("h00")) @[MAC.scala 48:19]
    node _T_3 = eq(weight_loaded, UInt<1>("h00")) @[MAC.scala 53:36]
    node _T_4 = and(io.weight_input.valid, _T_3) @[MAC.scala 53:33]
    when _T_4 : @[MAC.scala 53:52]
      weight <= io.weight_input.bits @[MAC.scala 54:14]
      weight_loaded <= UInt<1>("h01") @[MAC.scala 55:22]
      skip @[MAC.scala 53:52]
    node _T_5 = and(io.west.valid, io.north.valid) @[MAC.scala 63:25]
    node _T_6 = eq(busy, UInt<1>("h00")) @[MAC.scala 63:46]
    node _T_7 = and(_T_5, _T_6) @[MAC.scala 63:43]
    node _T_8 = and(_T_7, weight_loaded) @[MAC.scala 63:52]
    when _T_8 : @[MAC.scala 63:70]
      busy <= UInt<1>("h01") @[MAC.scala 64:12]
      io.west.ready <= UInt<1>("h00") @[MAC.scala 66:21]
      io.north.ready <= UInt<1>("h00") @[MAC.scala 67:22]
      east_reg <= io.west.bits @[MAC.scala 69:16]
      north_reg <= io.north.bits @[MAC.scala 70:17]
      skip @[MAC.scala 63:70]
    when busy : @[MAC.scala 74:18]
      node _T_9 = mul(east_reg, weight) @[MAC.scala 78:28]
      node _T_10 = add(_T_9, north_reg) @[MAC.scala 78:38]
      node _T_11 = tail(_T_10, 1) @[MAC.scala 78:38]
      node _T_12 = asSInt(_T_11) @[MAC.scala 78:38]
      mac_buf <= _T_12 @[MAC.scala 78:15]
      comp_done <= UInt<1>("h01") @[MAC.scala 80:17]
      busy <= UInt<1>("h00") @[MAC.scala 81:12]
      skip @[MAC.scala 74:18]
    io.east.bits <= east_reg @[MAC.scala 87:17]
    io.south.bits <= mac_buf @[MAC.scala 88:18]
    node _T_13 = eq(busy, UInt<1>("h00")) @[MAC.scala 90:9]
    node _T_14 = and(_T_13, comp_done) @[MAC.scala 90:15]
    when _T_14 : @[MAC.scala 90:29]
      io.east.valid <= UInt<1>("h01") @[MAC.scala 93:22]
      io.south.valid <= UInt<1>("h01") @[MAC.scala 94:23]
      comp_done <= UInt<1>("h00") @[MAC.scala 95:18]
      skip @[MAC.scala 90:29]
    
